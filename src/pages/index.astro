---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Welcome to Astro.">
	<main>
		<div class="calendar">
			<h1 class="monthName" id="monthName">hola</h1>
			<div class="week">
				<li>lunes</li>
				<li>martes</li>
				<li>miercoles</li>
				<li>jueves</li>
				<li>viernes</li>
				<li>sabado</li>
				<li>domingo</li>
			</div>
			<div class="days first">
				
			</div>
		</div>

	</main>
</Layout>

<script>

const intlW = new Intl.DateTimeFormat('es',{weekday: "short"})
const intlM = new Intl.DateTimeFormat('es',{month: "long"})

function getMonthNumber() {
	const month = new Date(Date.now()).getMonth()
	return month
}

function getFirstDayofMonth() {
	let firstDay = new Date(2022,getMonthNumber(),1).getDay()
	return firstDay
}

function getTodayNumber() {
	return new Date(Date.now()).getDate()
}

function totalDaysofMonth() {
	return [...Array(12).keys()].map((v, m) => {
		let nextMonth = m + 1
		
		let daysofMonth = new Date(2022, nextMonth, 0).getDate()
		let month = intlM.format(new Date(2022,m)) 
		return {daysofMonth, month}
	})
}

function renderDays(){

	const month = document.querySelector('.monthName')
	const week = document.querySelector('.week')
	const days = document.querySelector('.days')

	const daysArr = [...Array(7).keys()].map(d => {
		return intlW.format(new Date(2022,7,d + 1)) 
	})
	const monthName = intlM.format(new Date(2022, getMonthNumber()))
	const totalDays = totalDaysofMonth()
	const {daysofMonth} = totalDays.find( total => total.month === monthName)

	days.innerHTML = [...Array(daysofMonth).keys()].reduce((a, v) => {

		return `${a} <li class="ldays">${v+1}</li>`
	}, '\n')

	const allDays = document.querySelectorAll('.days > li')

	allDays.forEach(day => {
		if(parseInt(day.innerHTML)  === getTodayNumber()){
			day.classList.add('today')
		}
	})

	let newClass = `firstDay-0${getFirstDayofMonth()}`
	
	days.classList.forEach(cl => {
		if(!cl.startsWith('first')) return
		days.classList.replace(cl, newClass)
	})

	month.innerHTML = `${intlM.format(new Date(2022,getMonthNumber()))}`
	week.innerHTML = daysArr.reduce((a, v) => {
		return `${a} <li class="listdays">${v}</li> \n`
	}, '\n')

	// return daysofMonth

	allDays.forEach( d => {
		d.addEventListener('click', () => {
			console.log('click!')
			allDays.forEach(d => d.classList.remove('active'))

			d.classList.add('active')
		})
	})
}	

renderDays()

</script>

<style is:global>
	@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;700&display=swap');

	*  {
		padding: 0;
		margin: 0;
		box-sizing: border-box;
	}

	.listdays {
		text-align: center;
		list-style: none;
	}

	.days > .active {
		/* background-color: rgba(141, 156, 206, 0.733); */
		color: rgb(245, 170, 235) ;
		font-size: 1.2em;
		box-shadow: 3px 5px 15px rgba(109, 109, 109, 0.116);
	}
	.days > .active:hover {
		color: white ;
		background-color: rgb(208, 190, 228);
	}

.ldays {
	color: rgb(79, 67, 110);
	display: grid;
	place-content: center;
	border-radius: 15%;
	padding: 30px;
	cursor: pointer;
}

.ldays:hover {
		background-color: rgba(179, 217, 248, 0.11);
	} 

	.today {
		border-radius: 50%;
		background-color: rgba(81, 98, 250, 0.096);
		font-weight: bold;
		font-size: 1.1em ;
		color: rgb(138, 90, 248) !important;
		border-radius: 50% !important;
	}

	
	.firstDay-01 > li:first-child{
		grid-column-start: 1;
	}
	.firstDay-02 > li:first-child{
		grid-column-start: 2;
	}
	.firstDay-03 > li:first-child{
		grid-column-start: 3;
	}
	.firstDay-04 > li:first-child{
		grid-column-start: 4;
	}
	.firstDay-05 > li:first-child{
		grid-column-start: 5;
	}
	.firstDay-06 > li:first-child{
		grid-column-start: 6;
	}
	.firstDay-07 > li:first-child{
		grid-column-start: 7;
	}

	.monthName {
		text-transform: capitalize;
		font-weight: bold;
		font-size: 3em;
  	background-image: linear-gradient(75deg, rgb(136, 181, 233), rgb(58, 42, 116));
		-webkit-background-clip: text;
		color: transparent;
	}

	.calendar {
		width: 85%;
		max-width: 600px;
		display: flex;
		flex-direction: column;
		gap: 2em;
		margin: auto;
		background-color: white;
		padding: 4em 2em;
		border-radius: 5%;
		box-shadow: 2px 10px 30px rgba(181, 80, 228, 0.13);
	}

	.week {
		display: grid;
		place-content: center;
		grid-template-columns: repeat(7, minmax(20px, 200px));
		gap: 1.2em;
		padding: .75em;
		color: rgb(189, 189, 189);
		text-transform: uppercase;
	}

	.days {
		margin-top: -30px;
		display: grid;
		grid-template-columns: repeat(7, minmax(20px, 200px));
		grid-auto-rows: 50px;
		align-content: space-around;
		align-items: ;
		text-align: center;
		gap: 15px;
		height: 400px;
		list-style: none;
		
	}




</style>

<style>

	body {
		min-height: 100vh;
		display: grid;
		place-content: center;
		background-color: rgb(252, 252, 252);
		font-family: 'roboto mono';
	}

	

	

</style>
